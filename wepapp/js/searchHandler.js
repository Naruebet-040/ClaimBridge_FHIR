document.getElementById('search-btn').addEventListener('click', async function() {
    const keyword = document.getElementById('keyword').value.toLowerCase();  // ‡∏î‡∏∂‡∏á‡∏Ñ‡πà‡∏≤‡∏à‡∏≤‡∏Å‡∏ä‡πà‡∏≠‡∏á‡∏Å‡∏£‡∏≠‡∏Å‡∏Ñ‡∏≥‡πÅ‡∏•‡∏∞‡πÅ‡∏õ‡∏•‡∏á‡πÄ‡∏õ‡πá‡∏ô‡∏ï‡∏±‡∏ß‡∏û‡∏¥‡∏°‡∏û‡πå‡πÄ‡∏•‡πá‡∏Å
    const rows = document.querySelectorAll('#table-body tr');  // ‡∏î‡∏∂‡∏á‡∏ó‡∏∏‡∏Å‡πÅ‡∏ñ‡∏ß‡πÉ‡∏ô‡∏ï‡∏≤‡∏£‡∏≤‡∏á

    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ó‡∏∏‡∏Å‡πÅ‡∏ñ‡∏ß‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏´‡∏≤‡∏Ñ‡∏≥‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏ó‡∏µ‡πà‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏ô‡πÅ‡∏ñ‡∏ß
    rows.forEach(row => {
        const cells = row.querySelectorAll('td');  // ‡∏î‡∏∂‡∏á‡πÄ‡∏ã‡∏•‡∏•‡πå‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡πÉ‡∏ô‡πÅ‡∏ñ‡∏ß
        let rowText = '';  // ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ï‡∏±‡∏ß‡πÅ‡∏õ‡∏£‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÄ‡∏Å‡πá‡∏ö‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÉ‡∏ô‡πÅ‡∏ñ‡∏ß

        // ‡∏£‡∏ß‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å‡∏ó‡∏∏‡∏Å‡πÄ‡∏ã‡∏•‡∏•‡πå‡∏Ç‡∏≠‡∏á‡πÅ‡∏ñ‡∏ß‡πÄ‡∏õ‡πá‡∏ô‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°
        cells.forEach(cell => {
            rowText += cell.textContent.toLowerCase();  // ‡πÅ‡∏õ‡∏•‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÉ‡∏ô‡πÄ‡∏ã‡∏•‡∏•‡πå‡πÄ‡∏õ‡πá‡∏ô‡∏ï‡∏±‡∏ß‡∏û‡∏¥‡∏°‡∏û‡πå‡πÄ‡∏•‡πá‡∏Å
        });

        // ‡∏ñ‡πâ‡∏≤‡∏Ñ‡∏≥‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏°‡∏µ‡πÉ‡∏ô‡πÅ‡∏ñ‡∏ß ‡πÉ‡∏´‡πâ‡πÅ‡∏™‡∏î‡∏á‡πÅ‡∏ñ‡∏ß‡πÑ‡∏ß‡πâ ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏ï‡∏£‡∏á ‡πÉ‡∏´‡πâ‡∏ã‡πà‡∏≠‡∏ô‡πÅ‡∏ñ‡∏ß‡∏ô‡∏±‡πâ‡∏ô
        if (rowText.includes(keyword)) {
            row.style.display = '';  // ‡πÅ‡∏™‡∏î‡∏á‡πÅ‡∏ñ‡∏ß
        } else {
            row.style.display = 'none';  // ‡∏ã‡πà‡∏≠‡∏ô‡πÅ‡∏ñ‡∏ß
        }
    });

    

    // Get selected resources
    //const resources = Array.from(document.querySelectorAll('input[type="checkbox"][id^="resource"]:checked'))
    //                        .map(checkbox => checkbox.value);
    //console.log("üì¶ Selected Resources:", resources);
    const selectElement = document.getElementById('resource-select');
    const resources = Array.from(selectElement.selectedOptions).map(option => option.value);
    
    if (!resources || resources === "‡πÄ‡∏•‡∏∑‡∏≠‡∏Å Resource") {
        alert("‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å Resource ‡∏Å‡πà‡∏≠‡∏ô‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤");
        return; // ‡πÑ‡∏°‡πà‡∏™‡πà‡∏á request ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å
    }
    console.log("üì¶ Selected Resource:", resources);

    
    // Get selected locations
    const locations = Array.from(document.querySelectorAll('input[type="checkbox"][id^="location"]:checked'))
                            .map(checkbox => checkbox.value);
    console.log("üìç Selected Locations:", locations);


    const requestData = {
        keyword: keyword,
        resources: resources,
        locations: locations
    };

    console.log("üì§ Sending requestData:", requestData);

    try {
        const response = await fetch('/search', {
            method: 'POST',
            headers: {
            'Content-Type': 'application/json; charset=utf-8'
        },
        body: JSON.stringify(requestData)
    });

        if (!response.ok) {
            throw new Error(`HTTP error! status: ${response.status}`);
        }

        const data = await response.json();
        console.log("‚úÖ Response from server:", data);

        // Clear previous results
        const resultsContainer = document.getElementById('results');
        resultsContainer.innerHTML = '';

        // ‚úÖ ‡πÅ‡∏™‡∏î‡∏á‡∏ï‡∏≤‡∏£‡∏≤‡∏á
        const table = document.querySelector('table');
        if (table) {
            table.style.display = 'table';
        }

        // ‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏ô‡∏ï‡∏≤‡∏£‡∏≤‡∏á
        resetTable();

      // Call the function to map the JSON data to the table
        mapJsonToTable(data, locations);

    } catch (error) {
        console.error("‚ùå Fetch error:", error);
    }
});